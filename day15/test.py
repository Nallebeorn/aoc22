def merge(intervals):

    intervals.sort(key=lambda x: x[0])

    merged = []
    for interval in intervals:
        # if the list of merged intervals is empty or if the current
        # interval does not overlap with the previous, simply append it.
        if not merged or merged[-1][1] < interval[0]:
            merged.append(interval)
        else:
        # otherwise, there is overlap, so we merge the current and previous
        # intervals.
            merged[-1][1] = max(merged[-1][1], interval[1])

    return merged
    
input = [(2, 2), (1, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 8), (0, 7), (9, 9), (8, 10), (12, 14), (11, 15), (10, 16), (11, 15), (12, 14), (12, 12), (11, 13), (10, 14), (9, 15), (8, 16), (9, 15), (10, 14), (11, 13), (10, 10), (9, 11), (8, 12), (7, 13), (6, 14), (14, 14), (13, 15), (12, 16), (11, 17), (10, 18), (9, 19), (10, 18), (11, 17), (12, 16), (6, 10), (5, 11), (4, 12), (3, 13), (2, 14), (1, 15), (0, 16), (0, 17), (0, 16), (1, 15), (2, 14), (3, 13), (4, 12), (5, 11), (6, 10), (7, 9), (0, 12), (0, 11), (0, 10), (0, 9), (0, 8), (0, 7), (0, 6), (0, 5), (0, 4), (1, 3), (0, 0), (0, 1), (0, 2), (0, 3), (0, 2), (0, 1), (20, 20), (19, 20), (18, 20), (17, 20), (16, 20), (15, 20), (14, 20), (13, 20), (12, 20), (13, 20), (14, 20), (15, 20), (16, 20), (17, 20), (18, 20), (17, 17), (16, 18), (15, 19), (14, 20), (13, 20), (12, 20), (11, 20), (16, 16), (15, 17), (14, 18), (13, 19), (12, 20), (11, 20), (12, 20), (13, 19), (14, 18), (15, 17), (14, 14), (13, 15), (14, 20), (13, 20), (14, 20), (15, 20), (16, 20), (17, 20), (18, 20), (19, 20)]
input = [list(tup) for tup in input]

print(len(input))
print(merge(input))